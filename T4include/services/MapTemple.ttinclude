<#+
    public class MapTemplate:Template
    {
	    public MapTemplate(Table table,IEnumerable<string> includeTables):base(table,includeTables)
        {
        }

        public override string TransformText()
        {
#>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using <#=ProjectName#>.Data.<#=Namespace#>;

namespace <#=ProjectName#>.Map.<#=Namespace#>
{
    public class <#=EntityName#>Map
    {
        public  <#=EntityName#>Map(EntityTypeBuilder<<#=EntityName#>> entityMap, string schema = "dbo")
        {
            entityMap.ToTable(schema + "<#=t.Name#>");
     <#+

            if( primaryKey!=null)
            {#>
    entityMap.HasKey(a => a.<#=primaryKey.Name #>);
            entityMap.Property(a => a.<#=primaryKey.Name #>).HasColumnName("<#=primaryKey.Name #>").IsRequired().HasMaxLength(50);
<#+
            }
            foreach (Column c in t.Columns)
            {       
                string colDescription=UtilTemplate.GetColumnDescription(c);
                string columnEnumType="";
                if(c.Name!=primaryKey.Name)
                {
#>
            entityMap.Property(a => a.<#=c.Name #>).HasColumnName("<#=c.Name#>");
<#+
                }
            }
#>         
        }
}
}
<#+
            return this.GenerationEnvironment.ToString();
        }
    }


#>