<#+
    public class ControllerMgrTemplate:Template
    {
	    public ControllerMgrTemplate(Table table,IEnumerable<string> includeTables):base(table,includeTables)
        {





        }

        public override string TransformText()
        {
           string description=UtilTemplate.GetTableDescription(t);
#>

using System;
using System.Net.Http;
using System.Web.Http;
using System.Web.Http.Description;
using exin.FrameWork.Core.Common;
using exin.FrameWork.Core.Api;
using exin.FrameWork.Core.Attribute;
using exin.FrameWork.Core.Enums;
using exin.FrameWork.Core.Pagination;
using exin.Portal.WebApi.Utils;
using System.Collections.Generic;
using exin.Portal.EF.Data.Portal;
using <#=ProjectName#>.EF.Data.<#=Namespace#>;
using <#=ProjectName#>.EF.Service.<#=Namespace#>;


namespace <#=ProjectName#>.WebApi.Controller.<#=Namespace#>
{
    
    /// <summary>
    /// <#= UtilTemplate.ReplaceDescription(description,"	") #>
    /// </summary>
    [RoutePrefix("hzcg/<#=UtilTemplate.StrTopLower(EntityName)#>Mgr")]
    [ApiDocument(2.0)]
    public class <#=EntityName#>MgrController: ApiController
    {

        /// <summary>
        /// 添加
        /// </summary>
        <#+
        foreach (Column c in t.Columns){if(UtilTemplate.IsBaseField(c.Name)) continue;string colDescription=UtilTemplate.GetColumnDescription(c);#>
        /// <param name="<#=UtilTemplate.StrTopLower(c.Name)#>"><#=UtilTemplate.ReplaceDescription(colDescription,"		")#></param> 
<#+}#>
        /// <returns></returns>
        [Route("add"),ValidToken]
        [HttpPost]
        [MultiParameterSupport]
        [ResponseType(typeof(ApiResult))]
        public HttpResponseMessage Add(<#+int i=0; foreach (Column c in t.Columns){if(UtilTemplate.IsBaseField(c.Name)||c.Name==primaryKey.Name) continue; if(i!=0){#>,<#+} i++;#> <#= UtilTemplate.GetSysType(c.DataType.Name)#><#= UtilTemplate.CheckNullable(c)#> <#=UtilTemplate.StrTopLower(c.Name)#><#+}#>)
        {
          
            UserModel userinfo = this.GetUserInfo();
            if (!MenuUtil.HasUserPower(userinfo.PID, "admin/<#=UtilTemplate.StrTopLower(EntityName)#>Mgr/Index", "add"))
            {
                return this.ApiResult(ApiReturnCode.NoPower, "没有权限");
            }
            <#=EntityName#>Model model = new <#=EntityName#>Model();
            <#=EntityName#>Service service = new <#=EntityName#>Service();
       <#+foreach (Column c in t.Columns){ if(UtilTemplate.IsBaseField(c.Name)||c.Name==primaryKey.Name) continue;
                string colDescription=UtilTemplate.GetColumnDescription(c);#>
              model.<#=c.Name#> = <#=UtilTemplate.StrTopLower(c.Name)#>;
        <#+}
        #>
            model.GroupID = userinfo.GroupID;
            model.CreateUser = userinfo.PID;
            model.CreateTime = DateTime.Now;
            model.IsDelete = false;
            service.add(model);
            return this.ApiResult(ApiReturnCode.Success, "添加成功");
        }


        /// <summary>
        /// 删除
        /// </summary>
        /// <param name="Id">Id</param>
        /// <returns></returns>
        [Route("delete"),ValidToken]
        [HttpPost]
        [MultiParameterSupport]
        [ResponseType(typeof(ApiResult))]
        public HttpResponseMessage Delete(string Id)
        {
            UserModel userinfo = this.GetUserInfo();
            if (!MenuUtil.HasUserPower(userinfo.PID, "admin/<#=UtilTemplate.StrTopLower(EntityName)#>Mgr/Index", "del"))
            {
                return this.ApiResult(ApiReturnCode.NoPower, "没有权限");
            }

             <#=EntityName#>Service service = new <#=EntityName#>Service();
            service.Delete(Id);
            return this.ApiResult(ApiReturnCode.Success, "删除成功");
        }



        /// <summary>
        ///  列表（有关联表的）
        /// </summary>
        /// <param name="key">查询关键字</param>
        /// <param name="page"></param>
        /// <param name="limit"></param>
        /// <returns></returns>
        [Route("listPain"),ValidToken]
        [HttpPost]
        [MultiParameterSupport]
        [ResponseType(typeof(ApiResult<Pagination<<#=EntityName#>Model>>))]
        public HttpResponseMessage ListPainComplex(string key, int? page = 0, int? limit = 10)
        {
            page = page ?? 0;
            limit = limit ?? 10;

            UserModel userinfo = this.GetUserInfo();

            if (!MenuUtil.HasUserPower(userinfo.PID, "admin/<#=UtilTemplate.StrTopLower(EntityName)#>Mgr/Index", "add"))
            {
                return this.ApiResult(ApiReturnCode.NoPower, "没有权限");
            }

            <#=EntityName#>Service service = new <#=EntityName#>Service();
            Pagination<<#=EntityName#>ModelDTO> data = service.GetListbyPainComplex(key, page.Value, limit.Value);

            List<string> button = MenuUtil.GetModButton("admin/<#=UtilTemplate.StrTopLower(EntityName)#>Mgr/Index", userinfo.PID);
            data.ButtonRight = "";
            if (button.Count > 0)
            {
                data.ButtonRight = string.Join(",", button);
            }

            return this.ApiResult(ApiReturnCode.Success, data);
        }

        
        /// <summary>
        /// 更新
        /// </summary><#+foreach (Column c in t.Columns){if(UtilTemplate.IsBaseField(c.Name)||c.Name==primaryKey.Name) continue;string colDescription=UtilTemplate.GetColumnDescription(c);#>
        /// <param name="<#=UtilTemplate.StrTopLower(c.Name)#>"><#=UtilTemplate.ReplaceDescription(colDescription,"		")#></param>
<#+}#>
        /// <returns></returns>
        [Route("update"),ValidToken]
        [HttpPost]
        [MultiParameterSupport]
        [ResponseType(typeof(ApiResult))]
        public HttpResponseMessage Update(<#+ int k=0; foreach (Column c in t.Columns){if(UtilTemplate.IsBaseField(c.Name)) continue; if(k!=0){#>,<#+} k++;#> <#= UtilTemplate.GetSysType(c.DataType.Name)#><#= UtilTemplate.CheckNullable(c)#> <#=UtilTemplate.StrTopLower(c.Name)#><#+if(UtilTemplate.GetSysType(c.DataType.Name)=="String"){#>=null<#+}}#>)
        {
            <#=EntityName#>Service service = new <#=EntityName#>Service();
        
            UserModel userinfo = this.GetUserInfo();

            if (!MenuUtil.HasUserPower(userinfo.PID, "admin/<#=UtilTemplate.StrTopLower(EntityName)#>Mgr/Index", "edit"))
            {
                return this.ApiResult(ApiReturnCode.NoPower, "没有权限");
            }


            <#=EntityName#>Model model = service.GetDetailByKey(pID);
            if (model == null)
            {
                return this.ApiResult(ApiReturnCode.NormalError, "查询不到数据！");
            }
            else
            {   
                <#+
                foreach (Column c in t.Columns){ 
                if(UtilTemplate.IsBaseField(c.Name)||c.Name==primaryKey.Name) continue;   
                if(UtilTemplate.GetSysType(c.DataType.Name)=="string")
                {#>
                   if(!string.IsNullOrWhiteSpace(<#=UtilTemplate.StrTopLower(c.Name)#>)){  model.<#=c.Name#>=<#=UtilTemplate.StrTopLower(c.Name)#>;} 
                <#+}else{#>
                   if(<#=UtilTemplate.StrTopLower(c.Name)#>!=null){ model.<#=c.Name#>=<#=UtilTemplate.StrTopLower(c.Name)#>;} 
                <#+}
            } #>

                model.UpdateUser = userinfo.PID;
                model.UpdateTime = DateTime.Now;
                    
                service.Update(model);
                return this.ApiResult(ApiReturnCode.Success, "更新成功！");
            }
        }



        /// <summary>
        /// 选择器
        /// </summary>
        /// <returns></returns>
        [Route("customerQuery"), ValidToken]
        [HttpPost]
        [MultiParameterSupport]
        [ResponseType(typeof(ApiResult))]
        public HttpResponseMessage CustomerQuery()
        {
            UserModel userinfo = this.GetUserInfo();
             <#=EntityName#>Service service = new <#=EntityName#>Service();
            List<<#=EntityName#>Model> data = service.CustomQuery(a => a.GroupID == userinfo.GroupID, a => a.CreateTime);
            return this.ApiResult(ApiReturnCode.Success, data);
        }



        /// <summary>
        ///  批量刪除
        /// </summary>
        /// <param name="ids">id以逗号隔开</param>
        /// <returns></returns>
        [Route("BatchDelete"), ValidToken]
        [HttpPost]
        [MultiParameterSupport]
        [ResponseType(typeof(ApiResult))]
        public HttpResponseMessage BatchDelete(string ids)
        {
            UserModel userinfo = this.GetUserInfo();

            if (!MenuUtil.HasUserPower(userinfo.PID, "admin/<#=UtilTemplate.StrTopLower(EntityName)#>Mgr/Index", "del"))
            {
                return this.ApiResult(ApiReturnCode.NoPower, "没有权限");
            }

            string[] idss = ids.Split(',');
            UserModel userInfo = this.GetUserInfo();
            
            <#=EntityName#>Service service = new <#=EntityName#>Service();  
            foreach (string item in idss)
            {
                 service.Delete(item);
            }

            return this.ApiResult(ApiReturnCode.Success, "删除成功");
        }



        /// <summary>
        /// 获取按钮接口
        /// </summary>
        /// <returns></returns>
        [Route("GetButtonRight"), ValidToken]
        [HttpPost]
        [MultiParameterSupport]
        [ResponseType(typeof(ApiResult<List<DepartmentModel>>))]
        public HttpResponseMessage GetButtonRight()
        {
            UserModel userinfo = this.GetUserInfo();
            object rtn = MenuUtil.GetMouldeHtml("admin/<#=UtilTemplate.StrTopLower(EntityName)#>Mgr/Index", userinfo.PID);
            return this.ApiResult(ApiReturnCode.Success, rtn);
        }

    }
}

<#+
            return this.GenerationEnvironment.ToString();
        }
    }


#>